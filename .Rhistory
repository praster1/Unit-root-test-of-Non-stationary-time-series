rgeom(100, prob=0.1)
rm(list = ls())
# setwd("/home/lv999/Dropbox/Github/Unit-root-test-of-Non-stationary-time-series")
setwd("E:/Dropbox/Github/Unit-root-test-of-Non-stationary-time-series")
source("seqDatetime_byEnddate.R")   # 시작일(startDate)부터 종료일(endDate) 직전까지 날짜 벡터 구하기
#seqDatetime_byEnddate(startDate="2000-01-01", endDate="2000-01-04", split=7)
source("seqDatetime_byLength.R")    # 시작일(startDate)부터 길이(length)만큼 날짜 벡터 구하기
# seqDatetime_byLength(startDate="2000-01-04", length=6, split=7)
source("getUniqVec.R")  # datetime의 index를 구하는 함수       # getUniqVec(datetimeVec, index="YYYYMMDDHHMMDD")
source("getCalcVec.R")  # split의 시작값, 종료값, 평균값, 중앙값 등을 구하는 함수       # getCalcVec(dataVec, datetimeIndexVec, calc="last")
# dataLen = 96*365*3      # 105120
##### 전력데이터
# Building A : 녹지캠
# Building B : 인문대          # 86641번째 index가 NA
# Building C : 하나과학관
data = read.csv("./datasets/buildingA_15min.csv")
dataVec = data[,5]
datetime = seqDatetime_byLength(startDate="2015-09-01", length=length(dataVec), split=96)   # 15분씩 나뉘어있으므로 split=96
indexVec = getUniqVec(datetime, index="YYYYMMDDHHMM")   # 1일 단위로 하려면 YYYYMMDD / 1시간 단위로 하려면 YYYYMMDDHH / 15분 단위로 하려면 YYYYMMDDHHMM
res = getCalcVec(dataVec, indexVec, calc="sum")
temp = cbind(indexVec, res)
dataVec = as.numeric(temp[,2])
dataLen = length(dataVec)
##### Sample Vector 리스트 구하기
source("getPartialData.R")  # dataVec을 stepSize만큼 건너뛰면서 partialLength씩 자른다.
### for Trend Test
partialLen_Trend = 96*14
stepSize_Trend = 96
signif_Trend = 0.001
sampleVec_Trend = getPartialData(dataVec, partialLength=partialLen_Trend, stepSize=stepSize_Trend)
### for Unit Root Test
partialLen_UnitRoot = 96*3.5
stepSize_UnitRoot = 96
sampleVec_UnitRoot = getPartialData(dataVec, partialLength=partialLen_UnitRoot, stepSize=stepSize_UnitRoot)
library(urca)
source("plotAll.R")
source("plotTrendTest.R")
# par(mfrow = c(6, 2))
# plotAll(dataVec, datetime)
xlab = ""
ylab = "X"
